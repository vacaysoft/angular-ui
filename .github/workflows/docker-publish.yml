name: Publish Docker Image

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - develop
      - staging
      - production

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: vacaysoft-ng

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - name: Extract branch name
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo $(echo ${GITHUB_REF#refs/heads/}))"
        id: extract_branch
          
      - name: Build image
        run: docker build . --file Dockerfile.${{ steps.extract_branch.outputs.branch }} --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login -u taipan-pr --password-stdin ghcr.io
    
      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/vacaysoft/$IMAGE_NAME/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo IMAGE_ID=$IMAGE_ID
          docker tag $IMAGE_NAME $IMAGE_ID:${{ steps.extract_branch.outputs.branch }}
          docker push $IMAGE_ID:${{ steps.extract_branch.outputs.branch }}
          
      - name: WebHook Trigger (Develop)
        if: ${{ steps.extract_branch.outputs.branch == 'develop' }}
        uses: fjogeleit/http-request-action@master
        with:
            url: '${{ secrets.AZURE_DEV_WEBHOOK }}'
            method: 'POST'
          
      - name: WebHook Trigger (Staging)
        if: ${{ steps.extract_branch.outputs.branch == 'staging' }}
        uses: fjogeleit/http-request-action@master
        with:
            url: '${{ secrets.AZURE_STG_WEBHOOK }}'
            method: 'POST'
          
      - name: WebHook Trigger (Production)
        if: ${{ steps.extract_branch.outputs.branch == 'production' }}
        uses: fjogeleit/http-request-action@master
        with:
            url: '${{ secrets.AZURE_PROD_WEBHOOK }}'
            method: 'POST'
